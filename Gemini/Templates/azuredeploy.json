{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {

    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "group": "Infrastructure settings",
        "description": "Change this value to your repo name if deploying from a fork"
      },
      "defaultValue": "https://raw.githubusercontent.com/PascalUmaknow/AutoProvision/master/Gemini/Templates"
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "group": "Infrastructure settings",
        "description": "Auto-generated token to access _artifactsLocation",
        "artifactsLocationSasToken": ""
      },
      "defaultValue": ""
    },
    "storageAccountNamePrefix": {
      "type": "string",
      "metadata": {
        "group": "Infrastructure settings",
        "description": "The prefix of the new storage account created to store the VM disks. Different storage accounts will be created for AD, SQL, and Gemini VMs."
      }
    },
    "storageAccountType": {
      "type": "string",
      "metadata": {
        "group": "Infrastructure settings",
        "description": "The type of storage account"
      },
      "defaultValue": "Premium_LRS"
    },
    "location": {
      "type": "string",
      "metadata": {
        "group": "Infrastructure settings",
        "description": "The region to deploy the resources into. Only change if resources need to be deployed to a different location than the resource group."
      },
      "defaultValue": "[resourceGroup().location]"
    },

    "geminiWebIPNewOrExisting": {
      "type": "string",
      "defaultValue": "new",
      "allowedValues": [
        "new",
        "existing"
      ],
      "metadata": {
        "group": "Gemini Server settings",
        "description": "Indicates whether the Gemini farm's IP is new or existing"
      }
    },
    "geminiWebIPAddressName": {
      "type": "string",
      "metadata": {
        "group": "Gemini Server settings",
        "description": "The new or existing - depending on value of geminiWebIPNewOrExisting parameter - IP address name for SP Web "
      },
      "defaultValue": "geminiIPAdress"
    },
    "dnsPrefix": {
      "type": "string",
      "metadata": {
        "group": "Gemini Server settings",
        "description": "The DNS Prefix for the Public IP Address for the Gemini Web Application"
      }
    },
    "geminiWebIPRGName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "group": "Gemini Server settings",
        "description": "Resource Group containing existing SP Web IP address"
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "geminiVNET",
      "metadata": {
        "group": "Infrastructure settings",
        "description": "Name of virtual network to be created"
      }
    },
    "virtualNetworkAddressRange": {
      "type": "string",
      "metadata": {
        "group": "Infrastructure settings",
        "description": "The address range of the new VNET in CIDR format"
      },
      "defaultValue": "10.0.0.0/16"
    },
    "sqlSubnet": {
      "type": "string",
      "metadata": {
        "group": "SQL Server settings",
        "description": "The address range of the SQL subnet created in the new VNET"
      },
      "defaultValue": "10.0.1.0/24"
    },
    "geminiWebSubnet": {
      "type": "string",
      "metadata": {
        "group": "Gemini Server settings",
        "description": "The address range of the Gemini Web subnet created in the new VNET"
      },
      "defaultValue": "10.0.2.0/24"
    },
    "geminiAppSubnet": {
      "type": "string",
      "metadata": {
        "group": "Gemini Server settings",
        "description": "The address range of the Gemini App subnet created in the new VNET"
      },
      "defaultValue": "10.0.3.0/24"
    },

    "staticSubnet": {
      "type": "string",
      "metadata": {
        "group": "Infrastructure settings",
        "description": "The address range of the subnet static IPs are allocated from in the new VNET"
      },
      "defaultValue": "10.0.0.0/24"
    },
    "sqlLBIPAddress": {
      "type": "string",
      "metadata": {
        "group": "SQL Server settings",
        "description": "The IP address of the new SQL ILB"
      },
      "defaultValue": "10.0.0.6"
    }

    //"GeminiFarmName": {
    //  "type": "string",
    //  "metadata": {
    //    "group": "basics",
    //    "description": "The name of the Gemini farm"
    //  },
    //  "defaultValue": "spfarm"
    //},
    //"adminUsername": {
    //  "type": "string",
    //  "metadata": {
    //    "group": "Infrastructure settings",
    //    "description": "The name of the administrator account of the new VMs and Domain"
    //  }
    //},
    //"adminPassword": {
    //  "type": "securestring",
    //  "metadata": {
    //    "group": "Infrastructure settings",
    //    "description": "The password for the administrator account of the new VMs and Domain"
    //  }
    //},

    //"domainName": {
    //  "type": "string",
    //  "metadata": {
    //    "group": "Active Directory settings",
    //    "description": "The FQDN of the AD Domain created "
    //  },
    //  "defaultValue": "sphafarm.local"
    //},
    //"sqlVMSize": {
    //  "type": "string",
    //  "metadata": {
    //    "group": "SQL Server settings",
    //    "description": "The size of the SQL VMs created"
    //  },
    //  "defaultValue": "Standard_DS3"
    //},
    //"witnessVMSize": {
    //  "type": "string",
    //  "metadata": {
    //    "group": "SQL Server settings",
    //    "description": "The size of the witness VM created"
    //  },
    //  "defaultValue": "Standard_DS1"
    //},
    //"sqlServerServiceAccountUserName": {
    //  "type": "string",
    //  "metadata": {
    //    "group": "SQL Server settings",
    //    "description": "The SQL Server service account name"
    //  },
    //  "defaultValue": "sqlservice"
    //},
    //"sqlServerServiceAccountPassword": {
    //  "type": "securestring",
    //  "metadata": {
    //    "group": "SQL Server settings",
    //    "description": "The SQL Server Service account password"
    //  }
    //},



    //"spVMSize": {
    //  "type": "string",
    //  "metadata": {
    //    "group": "Gemini Server settings",
    //    "description": "The size of the SP VMs Created"
    //  },
    //  "defaultValue": "Standard_DS2"
    //},
    //"GeminiSetupUserAccountUserName": {
    //  "type": "string",
    //  "metadata": {
    //    "group": "Gemini Server settings",
    //    "description": "The Gemini Setup account name"
    //  },
    //  "defaultValue": "sp_setup"
    //},
    //"GeminiSetupUserAccountPassword": {
    //  "type": "securestring",
    //  "metadata": {
    //    "group": "Gemini Server settings",
    //    "description": "The Gemini Setup account password"
    //  }
    //},
    //"GeminiFarmAccountUserName": {
    //  "type": "string",
    //  "metadata": {
    //    "group": "Gemini Server settings",
    //    "description": "The Gemini Farm account name"
    //  },
    //  "defaultValue": "sp_farm"
    //},
    //"GeminiFarmAccountPassword": {
    //  "type": "securestring",
    //  "metadata": {
    //    "group": "Gemini Server settings",
    //    "description": "The Gemini Farm account password"
    //  }
    //},
    //"GeminiFarmPassphrasePassword": {
    //  "type": "securestring",
    //  "metadata": {
    //    "group": "Gemini Server settings",
    //    "description": "The Gemini Farm Passphrase"
    //  }
    //},
    //"spSiteTemplateName": {
    //  "type": "string",
    //  "metadata": {
    //    "group": "Gemini Server settings",
    //    "description": "The Gemini Content Site Template Name"
    //  },
    //  "defaultValue": "STS#0"
    //}
  },
  "variables": {
    //"spCADNSPrefix": "[concat(parameters('dnsPrefix'),'admin')]",
    //"spCAIPAddressName": "[concat(parameters('geminiWebIPAddressName'),'admin')]",
    //"configDatabaseName": "SP_Config",
    //"administrationContentDatabaseName": "SP_AdminContent",
    //"contentDatabaseName": "spfarm_Content",
    "lbSettings": {
      "rdpLBFE": "rdpLBFE",
      "sqlLBFE": "sqlLBFE",
      "geminiWebLBFE": "geminiWebLBFE",
      "geminiCALBFE": "geminiCALBFE",
      "sqlLBBE": "sqlLBBE",
      "geminiWebLBBE": "geminiWebLBBE",
      "geminiCALBBE": "geminiCALBBE",
      "geminiWebLB": "spWeb",
      "spCALB": "spCALB",
      "sqlLBName": "sqlLoadBalancer",
      "rdpLBName": "rdpLoadBalancer",
      "geminiWebLBName": "spWebLoadBalancer",
      "geminiCALBName": "spCALoadBalancer"
    },
    "subnetNames": {
      "staticSubnetName": "staticSubnet",
      "sqlSubnetName": "sqlSubnet",
      "geminiWebSubnetName": "geminiWebSubnet",
      "geminiAppSubnetName": "geminiAppSubnet"
    },
    "RDPNAT": "RDP",
    "geminiCANAT": "geminiCANAT",
    "SQLAOProbe": "SQLAlwaysOnEndPointProbe",
    "gemininiWebProbe": "gemininiWebProbe",
    "rdpIPAddressName": "rdpIP",
    "vmSettings": {
      "availabilitySets": {
        "sqlAvailabilitySetName": "sqlAvailabilitySet",
        "geminiWebAvailabilitySetName": "geminiWebAvailabilitySet",
        "geminiAppAvailabilitySetName": "geminiAppAvailabilitySet"
      },
      "noOfSqlVMs": 2,
      "noOfspRoleVMs": 2,
      "vmContainerName": "vhds",
      "adPDCVMName": "ad-pdc",
      "adBDCVMName": "ad-bdc",
      "sqlVMName": "sql-",
      "sqlwVMName": "sql-w",
      "spwebVMName": "sps-web-",
      "spappVMName": "sps-app-",
      "windowsImagePublisher": "MicrosoftWindowsServer",
      "windowsImageOffer": "WindowsServer",
      "windowsImageSKU": "2012-R2-Datacenter",
      "sqlImagePublisher": "MicrosoftSQLServer",
      "sqlImageOffer": "SQL2014SP1-WS2012R2",
      "sqlImageSKU": "Enterprise",
      "spImagePublisher": "MicrosoftGemini",
      "spImageOffer": "MicrosoftGeminiServer",
      "spImageSKU": "2016",
      "rdpPort": 3389,
      "spCentralAdminPort": 80,
      "windowsDiskSize": 128,
      "sqlDiskSize": 1000,
      "spDiskSize": 128
    },
    //"prefix": "[tolower(trim(subString(concat(parameters('dnsPrefix'),'           '),0,10)))]",
    //"sqlAOEPName": "[concat(variables('prefix'),'-hadr')]",
    //"sqlAOAGName": "[concat(variables('prefix'),'-ag')]",
    //"sqlAOListenerName": "[concat(variables('prefix'),'ag-listener')]",
    //"sharePath": "[concat(variables('prefix'),'-fsw')]",
    //"clusterName": "[concat(variables('prefix'),'-fc')]",
    //"adPdcNicName": "[concat(variables('vmSettings').adPDCVMName,'-nic')]",
    //"adBdcNicName": "[concat(variables('vmSettings').adBDCVMName,'-nic')]",
    //"sqlwNicName": "[concat(variables('vmSettings').sqlwVMName,'-nic')]",
    "VnetID": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
    "staticSubnetRef": "[concat(variables('VnetID'),'/subnets/',variables('subnetNames').staticSubnetName)]",
    "sqlSubnetRef": "[concat(variables('VnetID'),'/subnets/',variables('subnetNames').sqlSubnetName)]",
    "geminiWebSubnetRef": "[concat(variables('VnetID'),'/subnets/',variables('subnetNames').geminiWebSubnetName)]",
    "geminiAppSubnetRef": "[concat(variables('VnetID'),'/subnets/',variables('subnetNames').geminiAppSubnetName)]",
    //"spWebResourceIdexisting": "[resourceId(parameters('geminiWebIPRGName'),concat('Microsoft.Network','/','publicIPAddresses'),parameters('geminiWebIPAddressName'))]",
    //"spWebResourceIdnew": "[resourceId(concat('Microsoft.Network','/','publicIPAddresses'),parameters('geminiWebIPAddressName'))]",
    //"GeminiCAfqdn": "[concat(variables('spCADNSPrefix'),'.',toLower(trim(replace(parameters('location'),' ' ,''))),'.cloudapp.azure.com')]",
    //"GeminiWebfqdn": "[concat(parameters('dnsPrefix'),'.',toLower(trim(replace(parameters('location'),' ' ,''))),'.cloudapp.azure.com')]",
    "ids": {  
      "rdplbID": "[resourceId('Microsoft.Network/loadBalancers',variables('lbSettings').rdpLBName)]",
      "geminiWebLBID": "[resourceId('Microsoft.Network/loadBalancers',variables('lbSettings').geminiWebLBName)]",
      "sqllbID": "[resourceId('Microsoft.Network/loadBalancers',variables('lbSettings').sqlLBName)]",
      "spCAlbID": "[resourceId('Microsoft.Network/loadBalancers',variables('lbSettings').geminiCALBName)]",
      //"geminiCAResourceId": "[resourceId('Microsoft.Network/publicIPAddresses',variables('spCAIPAddressName'))]",
      "sqlAvailabilitySetName": "[resourceId('Microsoft.Compute/availabilitySets',variables('vmSettings').availabilitySets.sqlAvailabilitySetName)]",
      "geminiWebAvailabilitySetName": "[resourceId('Microsoft.Compute/availabilitySets',variables('vmSettings').availabilitySets.geminiWebAvailabilitySetName)]",
      "geminiAppAvailabilitySetName": "[resourceId('Microsoft.Compute/availabilitySets',variables('vmSettings').availabilitySets.geminiAppAvailabilitySetName)]"
    },
    "derivedIds": {
      "rdplbFEConfigID": "[concat(variables('ids').rdplbID,'/frontendIPConfigurations/',variables('lbSettings').rdpLBFE)]",
      "geminiWebLBFEConfigID": "[concat(variables('ids').geminiWebLBID,'/frontendIPConfigurations/',variables('lbSettings').geminiWebLBFE)]",
     // "geminiWebProbeID": "[concat(variables('ids').geminiWebLBID,'/probes/',variables('gemininiWebProbe'))]",
      "geminiWebBEAddressPoolID": "[concat(variables('ids').geminiWebLBID,'/backendAddressPools/',variables('lbSettings').geminiWebLBBE)]",
      "sqlBEAddressPoolID": "[concat(variables('ids').sqllbID,'/backendAddressPools/',variables('lbSettings').sqlLBBE)]",
      "sqllbFEConfigID": "[concat(variables('ids').sqllbID,'/frontendIPConfigurations/',variables('lbSettings').sqlLBFE)]",
   //   "sqllbProbeID": "[concat(variables('ids').sqllbID,'/probes/',variables('SQLAOProbe'))]",
      "spCABEAddressPoolID": "[concat(variables('ids').spCAlbID,'/backendAddressPools/',variables('lbSettings').geminiCALBBE)]",
      "geminiCALBFEConfigID": "[concat(variables('ids').spCAlbID,'/frontendIPConfigurations/',variables('lbSettings').geminiCALBFE)]"
  //    "geminiCANATRuleID": "[concat(variables('ids').spCAlbID,'/inboundNatRules/',variables('geminiCANAT'))]"
    },
    "subnets": [
      {
        "name": "[variables('subnetNames').staticSubnetName]",
        "properties": {
          "addressPrefix": "[parameters('staticSubnet')]"
        }
      },
      {
        "name": "[variables('subnetNames').sqlSubnetName]",
        "properties": {
          "addressPrefix": "[parameters('sqlSubnet')]"
        }
      },
      {
        "name": "[variables('subnetNames').geminiWebSubnetName]",
        "properties": {
          "addressPrefix": "[parameters('geminiWebSubnet')]"
        }
      },
      {
        "name": "[variables('subnetNames').geminiAppSubnetName]",
        "properties": {
          "addressPrefix": "[parameters('geminiAppSubnet')]"
        }
      }
    ]
  },
  "resources": [
    {
      "name": "CreatingStorageAccounts",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'),'/','nestedtemplates','/','creatingStorageAccounts.json', parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "storageAccountNamePrefix": {
            "value": "[parameters('storageAccountNamePrefix')]"
          },
          "storageAccountType": {
            "value": "[parameters('storageAccountType')]"
          }
        }
      }
    },
      {
        "name": "SettingUpRdp",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2015-01-01",
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[concat(parameters('_artifactsLocation'),'/','nestedtemplates','/','publicip-rdp.json', parameters('_artifactsLocationSasToken'))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "location": {
              "value": "[parameters('location')]"
            },
            "rdpIPAddressName": {
              "value": "[variables('rdpIPAddressName')]"
            },
            "rdpLBName": {
              "value": "[variables('lbSettings').rdpLBName]"
            },
            "rdpLBFE": {
              "value": "[variables('lbSettings').rdpLBFE]"
            },
            "RDPNAT": {
              "value": "[variables('RDPNAT')]"
            },
            "rdplbFEConfigID": {
              "value": "[variables('derivedIds').rdplbFEConfigID]"
            }
          }
        }
      },
      {
        "name": "SettingUpGeminiWebPublicIP",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2015-01-01",
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[concat(parameters('_artifactsLocation'),'/','nestedtemplates','/','publicip-',parameters('geminiWebIPNewOrExisting'),'.json', parameters('_artifactsLocationSasToken'))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "location": {
              "value": "[parameters('location')]"
            },
            "publicIPAddressName": {
              "value": "[parameters('geminiWebIPAddressName')]"
            },
            "publicIPAddressType": {
              "value": "dynamic"
            },
            "dnsPrefix": {
              "value": "[parameters('dnsPrefix')]"
            },
            "publicIpRGName": {
              "value": "[parameters('geminiWebIPRGName')]"
            }
          }
        }
      },
      {
        "name": "CreatingAvailabilitySets",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2015-01-01",
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[concat(parameters('_artifactsLocation'),'/','nestedtemplates','/','availabilitySets.json', parameters('_artifactsLocationSasToken'))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "location": {
              "value": "[parameters('location')]"
            },
            "sqlAvailabilitySetName": {
              "value": "[variables('vmSettings').availabilitySets.sqlAvailabilitySetName]"
            },
            "geminiWebAvailabilitySetName": {
              "value": "[variables('vmSettings').availabilitySets.geminiWebAvailabilitySetName]"
            },
            "geminiAppAvailabilitySetName": {
              "value": "[variables('vmSettings').availabilitySets.geminiAppAvailabilitySetName]"
            }
          }
        }
      },
      {
        "name": "CreatingVirtualNetwork",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2015-01-01",
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[concat(parameters('_artifactsLocation'),'/','nestedtemplates','/','vnet-new.json', parameters('_artifactsLocationSasToken'))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "location": {
              "value": "[parameters('location')]"
            },
            "virtualNetworkName": {
              "value": "[parameters('virtualNetworkName')]"
            },
            "virtualNetworkAddressRange": {
              "value": "[parameters('virtualNetworkAddressRange')]"
            },
            "subnets": {
              "value": "[variables('subnets')]"
            }
          }
        }
      },
      {
        "name": "SettingUpLoadBalancers",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2015-01-01",
        "dependsOn": [
          "Microsoft.Resources/deployments/SettingUpGeminiCentralAdminPublicIP",
          "Microsoft.Resources/deployments/SettingUpGeminiWebPublicIP",
          "Microsoft.Resources/deployments/SettingUpRdp",
          "Microsoft.Resources/deployments/CreatingVirtualNetwork"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[concat(parameters('_artifactsLocation'),'/','nestedtemplates','/','setupLBs.json', parameters('_artifactsLocationSasToken'))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "location": {
              "value": "[parameters('location')]"
            },
            "geminiCALBName": {
              "value": "[variables('lbSettings').geminiCALBName]"
            },
            "geminiCALBFE": {
              "value": "[variables('lbSettings').geminiCALBFE]"
            },
            "geminiCAResourceId": {
              "value": "[variables('ids').geminiCAResourceId]"
            },
            "geminiCALBBE": {
              "value": "[variables('lbSettings').geminiCALBBE]"
            },
            "geminiCANAT": {
              "value": "[variables('geminiCANAT')]"
            },
            "geminiCALBFEConfigID": {
              "value": "[variables('derivedIds').geminiCALBFEConfigID]"
            },
            "geminiWebLBName": {
              "value": "[variables('lbSettings').geminiWebLBName]"
            },
            "geminiWebLBFE": {
              "value": "[variables('lbSettings').geminiWebLBFE]"
            },
            "spWebResourceId": {
              "value": "[variables(concat('spWebResourceId',parameters('geminiWebIPNewOrExisting')))]"
            },
            "geminiWebLBBE": {
              "value": "[variables('lbSettings').geminiWebLBBE]"
            },
            "geminiWebLB": {
              "value": "[variables('lbSettings').geminiWebLB]"
            },
            "geminiWebLBFEConfigID": {
              "value": "[variables('derivedIds').geminiWebLBFEConfigID]"
            },
            "geminiWebBEAddressPoolID": {
              "value": "[variables('derivedIds').geminiWebBEAddressPoolID]"
            },
            "geminiWebProbeID": {
              "value": "[variables('derivedIds').geminiWebProbeID]"
            },
            "gemininiWebProbe": {
              "value": "[variables('gemininiWebProbe')]"
            },
            "sqlLBName": {
              "value": "[variables('lbSettings').sqlLBName]"
            },
            "sqlLBFE": {
              "value": "[variables('lbSettings').sqlLBFE]"
            },
            "sqlLBIPAddress": {
              "value": "[parameters('sqlLBIPAddress')]"
            },
            "staticSubnetRef": {
              "value": "[variables('staticSubnetRef')]"
            },
            "sqlLBBE": {
              "value": "[variables('lbSettings').sqlLBBE]"
            },
            "sqllbFEConfigID": {
              "value": "[variables('derivedIds').sqllbFEConfigID]"
            },
            "sqllbProbeID": {
              "value": "[variables('derivedIds').sqllbProbeID]"
            },
            "SQLAOProbe": {
              "value": "[variables('SQLAOProbe')]"
            }
          }
        }
      }
      //{
      //  "name": "CreatingNetworkInterfaces",
      //  "type": "Microsoft.Resources/deployments",
      //  "apiVersion": "2015-01-01",
      //  "dependsOn": [
      //    "Microsoft.Resources/deployments/CreatingVirtualNetwork",
      //    "Microsoft.Resources/deployments/SettingUpRdp",
      //    "Microsoft.Resources/deployments/SettingUpLoadBalancers"
      //  ],
      //  "properties": {
      //    "mode": "Incremental",
      //    "templateLink": {
      //      "uri": "[concat(parameters('_artifactsLocation'),'/','nestedtemplates','/','creatingNICS.json', parameters('_artifactsLocationSasToken'))]",
      //      "contentVersion": "1.0.0.0"
      //    },
      //    "parameters": {
      //      "location": {
      //        "value": "[parameters('location')]"
      //      },
      //      "adPdcNicName": {
      //        "value": "[variables('adPdcNicName')]"
      //      },
      //      "adPdcNicIPAddress": {
      //        "value": "[parameters('adPdcNicIPAddress')]"
      //      },
      //      "staticSubnetRef": {
      //        "value": "[variables('staticSubnetRef')]"
      //      },
      //      "adBEAddressPoolID": {
      //        "value": "[variables('derivedIds').adBEAddressPoolID]"
      //      },
      //      "adRDPNATRuleID": {
      //        "value": "[variables('derivedIds').adRDPNATRuleID]"
      //      },
      //      "adBdcNicName": {
      //        "value": "[variables('adBdcNicName')]"
      //      },
      //      "adBdcNicIPAddress": {
      //        "value": "[parameters('adBdcNicIPAddress')]"
      //      },
      //      "sqlVMName": {
      //        "value": "[variables('vmSettings').sqlVMName]"
      //      },
      //      "sqlSubnetRef": {
      //        "value": "[variables('sqlSubnetRef')]"
      //      },
      //      "sqlBEAddressPoolID": {
      //        "value": "[variables('derivedIds').sqlBEAddressPoolID]"
      //      },
      //      "spwebVMName": {
      //        "value": "[variables('vmSettings').spwebVMName]"
      //      },
      //      "geminiWebSubnetRef": {
      //        "value": "[variables('geminiWebSubnetRef')]"
      //      },
      //      "geminiWebBEAddressPoolID": {
      //        "value": "[variables('derivedIds').geminiWebBEAddressPoolID]"
      //      },
      //      "spappVMName": {
      //        "value": "[variables('vmSettings').spappVMName]"
      //      },
      //      "geminiAppSubnetRef": {
      //        "value": "[variables('geminiAppSubnetRef')]"
      //      },
      //      "spCABEAddressPoolID": {
      //        "value": "[variables('derivedIds').spCABEAddressPoolID]"
      //      },
      //      "geminiCANATRuleID": {
      //        "value": "[variables('derivedIds').geminiCANATRuleID]"
      //      },
      //      "sqlwNicName": {
      //        "value": "[variables('sqlwNicName')]"
      //      }
      //    }
      //  }
      //},
      //{
      //  "name": "ProvisioningSQLVirtualMachines",
      //  "type": "Microsoft.Resources/deployments",
      //  "apiVersion": "2015-01-01",
      //  "dependsOn": [
      //    "Microsoft.Resources/deployments/CreatingStorageAccounts",
      //    "Microsoft.Resources/deployments/CreatingNetworkInterfaces",
      //    "Microsoft.Resources/deployments/CreatingAvailabilitySets"
      //  ],
      //  "properties": {
      //    "mode": "Incremental",
      //    "templateLink": {
      //      "uri": "[concat(parameters('_artifactsLocation'),'/','nestedtemplates','/','provisioningSQLVMs.json', parameters('_artifactsLocationSasToken'))]",
      //      "contentVersion": "1.0.0.0"
      //    },
      //    "parameters": {
      //      "sqlVMName": {
      //        "value": "[variables('vmSettings').sqlVMName]"
      //      },
      //      "location": {
      //        "value": "[parameters('location')]"
      //      },
      //      "storageAccountNamePrefix": {
      //        "value": "[parameters('storageAccountNamePrefix')]"
      //      },
      //      "availabilitySet": {
      //        "value": "[variables('ids').sqlAvailabilitySetName]"
      //      },
      //      "sqlVMSize": {
      //        "value": "[parameters('sqlVMSize')]"
      //      },
      //      "adminUsername": {
      //        "value": "[parameters('adminUsername')]"
      //      },
      //      "adminPassword": {
      //        "value": "[parameters('adminPassword')]"
      //      },
      //      "windowsImagePublisher": {
      //        "value": "[variables('vmSettings').windowsImagePublisher]"
      //      },
      //      "windowsImageOffer": {
      //        "value": "[variables('vmSettings').windowsImageOffer]"
      //      },
      //      "windowsImageSKU": {
      //        "value": "[variables('vmSettings').windowsImageSKU]"
      //      },
      //      "vmContainerName": {
      //        "value": "[variables('vmSettings').vmContainerName]"
      //      },
      //      "sqlImagePublisher": {
      //        "value": "[variables('vmSettings').sqlImagePublisher]"
      //      },
      //      "sqlImageOffer": {
      //        "value": "[variables('vmSettings').sqlImageOffer]"
      //      },
      //      "sqlImageSKU": {
      //        "value": "[variables('vmSettings').sqlImageSKU]"
      //      },
      //      "domainName": {
      //        "value": "[parameters('domainName')]"
      //      },
      //      "sqlAOPrepareModulesURL": {
      //        "value": "[concat(parameters('_artifactsLocation'),'/','dscv2','/','PrepareAlwaysOnSqlServer.ps1.zip', parameters('_artifactsLocationSasToken'))]"
      //      },
      //      "sqlAOPrepareFunction": {
      //        "value": "PrepareAlwaysOnSqlServer.ps1\\PrepareAlwaysOnSqlServer"
      //      },
      //      "prepareClusterModulesURL": {
      //        "value": "[concat(parameters('_artifactsLocation'),'/','dscv2','/','PrepareFailoverCluster.ps1.zip', parameters('_artifactsLocationSasToken'))]"
      //      },
      //      "prepareClusterConfigurationFunction": {
      //        "value": "PrepareFailoverCluster.ps1\\PrepareFailoverCluster"
      //      },
      //      "sharePath": {
      //        "value": "[variables('sharePath')]"
      //      },
      //      "witnessVMSize": {
      //        "value": "[parameters('witnessVMSize')]"
      //      },
      //      "sqlwVMName": {
      //        "value": "[variables('vmSettings').sqlwVMName]"
      //      },
      //      "sqlwNicName": {
      //        "value": "[variables('sqlwNicName')]"
      //      },
      //      "fswPreparationModulesURL": {
      //        "value": "[concat(parameters('_artifactsLocation'),'/','dscv2','/','PrepareFileShareWitness.ps1.zip', parameters('_artifactsLocationSasToken'))]"
      //      },
      //      "fswPreparationFunction": {
      //        "value": "PrepareFileShareWitness.ps1\\PrepareFileShareWitness"
      //      },
      //      "DNSServer": {
      //        "value": "[parameters('adPdcNicIPAddress')]"
      //      }
      //    }
      //  }
      //},
      //{
      //  "name": "ConfiguringSQLAlwaysOnCluster",
      //  "type": "Microsoft.Resources/deployments",
      //  "apiVersion": "2015-01-01",
      //  "dependsOn": [
      //    "Microsoft.Resources/deployments/UpdatingDNSwithBackupADVM",
      //    "Microsoft.Resources/deployments/ProvisioningSQLVirtualMachines"
      //  ],
      //  "properties": {
      //    "mode": "Incremental",
      //    "templateLink": {
      //      "uri": "[concat(parameters('_artifactsLocation'),'/','nestedtemplates','/','configuringSQLAlwaysOnCluster.json', parameters('_artifactsLocationSasToken'))]",
      //      "contentVersion": "1.0.0.0"
      //    },
      //    "parameters": {
      //      "sqlVMName": {
      //        "value": "[variables('vmSettings').sqlVMName]"
      //      },
      //      "location": {
      //        "value": "[parameters('location')]"
      //      },
      //      "adminUsername": {
      //        "value": "[parameters('adminUsername')]"
      //      },
      //      "adminPassword": {
      //        "value": "[parameters('adminPassword')]"
      //      },
      //      "domainName": {
      //        "value": "[parameters('domainName')]"
      //      },
      //      "sqlAOConfigurationModulesURL": {
      //        "value": "[concat(parameters('_artifactsLocation'),'/','dscv2','/','ConfigureAlwaysOnSqlServer.ps1.zip', parameters('_artifactsLocationSasToken'))]"
      //      },
      //      "sqlAOConfigurationFunction": {
      //        "value": "ConfigureAlwaysOnSqlServer.ps1\\ConfigureAlwaysOnSqlServer"
      //      },
      //      "sqlAOEPName": {
      //        "value": "[variables('sqlAOEPName')]"
      //      },
      //      "sqlServerServiceAccountUserName": {
      //        "value": "[parameters('sqlServerServiceAccountUserName')]"
      //      },
      //      "GeminiSetupUserAccountUserName": {
      //        "value": "[parameters('GeminiSetupUserAccountUserName')]"
      //      },
      //      "sqlServerServiceAccountPassword": {
      //        "value": "[parameters('sqlServerServiceAccountPassword')]"
      //      },
      //      "GeminiSetupUserAccountPassword": {
      //        "value": "[parameters('GeminiSetupUserAccountPassword')]"
      //      },
      //      "configureClusterModulesURL": {
      //        "value": "[concat(parameters('_artifactsLocation'),'/','dscv2','/','ConfigureFailoverCluster.ps1.zip', parameters('_artifactsLocationSasToken'))]"
      //      },
      //      "configureClusterConfigurationFunction": {
      //        "value": "ConfigureFailoverCluster.ps1\\ConfigureFailoverCluster"
      //      },
      //      "clusterName": {
      //        "value": "[variables('clusterName')]"
      //      },
      //      "sharePath": {
      //        "value": "[variables('sharePath')]"
      //      },
      //      "sqlAOAGName": {
      //        "value": "[variables('sqlAOAGName')]"
      //      },
      //      "sqlAOListenerName": {
      //        "value": "[variables('sqlAOListenerName')]"
      //      },
      //      "sqlLBName": {
      //        "value": "[variables('lbSettings').sqlLBName]"
      //      },
      //      "sqlLBIPAddress": {
      //        "value": "[parameters('sqlLBIPAddress')]"
      //      },
      //      "adPDCVMName": {
      //        "value": "[variables('vmSettings').adPDCVMName]"
      //      },
      //      "sqlwVMName": {
      //        "value": "[variables('vmSettings').sqlwVMName]"
      //      },
      //      "fswConfigurationModulesURL": {
      //        "value": "[concat(parameters('_artifactsLocation'),'/','dscv2','/','ConfigureFileShareWitness.ps1.zip', parameters('_artifactsLocationSasToken'))]"
      //      },
      //      "fswConfigurationFunction": {
      //        "value": "ConfigureFileShareWitness.ps1\\ConfigureFileShareWitness"
      //      }
      //    }
      //  }
      //},
      //{
      //  "name": "CreatingGeminiVirtualMachines",
      //  "type": "Microsoft.Resources/deployments",
      //  "apiVersion": "2015-01-01",
      //  "dependsOn": [
      //    "Microsoft.Resources/deployments/CreatingStorageAccounts",
      //    "Microsoft.Resources/deployments/CreatingNetworkInterfaces",
      //    "Microsoft.Resources/deployments/CreatingAvailabilitySets"
      //  ],
      //  "properties": {
      //    "mode": "Incremental",
      //    "templateLink": {
      //      "uri": "[concat(parameters('_artifactsLocation'),'/','nestedtemplates','/','provisioningGeminiVMs.json', parameters('_artifactsLocationSasToken'))]",
      //      "contentVersion": "1.0.0.0"
      //    },
      //    "parameters": {
      //      "spappVMName": {
      //        "value": "[variables('vmSettings').spappVMName]"
      //      },
      //      "spwebVMName": {
      //        "value": "[variables('vmSettings').spwebVMName]"
      //      },
      //      "location": {
      //        "value": "[parameters('location')]"
      //      },
      //      "spVMSize": {
      //        "value": "[parameters('spVMSize')]"
      //      },
      //      "geminiWebAvailabilitySet": {
      //        "value": "[variables('ids').geminiWebAvailabilitySetName]"
      //      },
      //      "geminiAppAvailabilitySet": {
      //        "value": "[variables('ids').geminiAppAvailabilitySetName]"
      //      },
      //      "adminUsername": {
      //        "value": "[parameters('adminUsername')]"
      //      },
      //      "adminPassword": {
      //        "value": "[parameters('adminPassword')]"
      //      },
      //      "spImagePublisher": {
      //        "value": "[variables('vmSettings').spImagePublisher]"
      //      },
      //      "spImageOffer": {
      //        "value": "[variables('vmSettings').spImageOffer]"
      //      },
      //      "spImageSKU": {
      //        "value": "[variables('vmSettings').spImageSKU]"
      //      },
      //      "vmContainerName": {
      //        "value": "[variables('vmSettings').vmContainerName]"
      //      },
      //      "storageAccountNamePrefix": {
      //        "value": "[parameters('storageAccountNamePrefix')]"
      //      },
      //      "spPreparationModulesURL": {
      //        "value": "[concat(parameters('_artifactsLocation'),'/','dscv2','/','PrepareGeminiServerHA.ps1.zip', parameters('_artifactsLocationSasToken'))]"
      //      },
      //      "spPreparationFunction": {
      //        "value": "PrepareGeminiServerHA.ps1\\PrepareGeminiServerHA"
      //      },
      //      "domainName": {
      //        "value": "[parameters('domainName')]"
      //      },
      //      "DNSServer": {
      //        "value": "[parameters('adPdcNicIPAddress')]"
      //      }
      //    }
      //  }
      //},
      //{
      //  "name": "ConfiguringGemini",
      //  "type": "Microsoft.Resources/deployments",
      //  "apiVersion": "2015-01-01",
      //  "dependsOn": [
      //    "Microsoft.Resources/deployments/ConfiguringSQLAlwaysOnCluster",
      //    "Microsoft.Resources/deployments/CreatingGeminiVirtualMachines"
      //  ],
      //  "properties": {
      //    "mode": "Incremental",
      //    "templateLink": {
      //      "uri": "[concat(parameters('_artifactsLocation'),'/','nestedtemplates','/','configuringGemini.json', parameters('_artifactsLocationSasToken'))]",
      //      "contentVersion": "1.0.0.0"
      //    },
      //    "parameters": {
      //      "spappVMName": {
      //        "value": "[variables('vmSettings').spappVMName]"
      //      },
      //      "sqlVMName": {
      //        "value": "[variables('vmSettings').sqlVMName]"
      //      },
      //      "location": {
      //        "value": "[parameters('location')]"
      //      },
      //      "spConfigurationModulesURL": {
      //        "value": "[concat(parameters('_artifactsLocation'),'/','dscv2','/','ConfigureGeminiServerHA.ps1.zip', parameters('_artifactsLocationSasToken'))]"
      //      },
      //      "spConfigurationFunction": {
      //        "value": "ConfigureGeminiServerHA.ps1\\ConfigureGeminiServerHA"
      //      },
      //      "domainName": {
      //        "value": "[parameters('domainName')]"
      //      },
      //      "adminUserName": {
      //        "value": "[parameters('adminUserName')]"
      //      },
      //      "adminPassword": {
      //        "value": "[parameters('adminPassword')]"
      //      },
      //      "GeminiSetupUserAccountUserName": {
      //        "value": "[parameters('GeminiSetupUserAccountUserName')]"
      //      },
      //      "GeminiFarmAccountUserName": {
      //        "value": "[parameters('GeminiFarmAccountUserName')]"
      //      },
      //      "sqlServerServiceAccountUserName": {
      //        "value": "[parameters('sqlServerServiceAccountUserName')]"
      //      },
      //      "sqlAOAGName": {
      //        "value": "[variables('sqlAOAGName')]"
      //      },
      //      "administrationContentDatabaseName": {
      //        "value": "[variables('administrationContentDatabaseName')]"
      //      },
      //      "configDatabaseName": {
      //        "value": "[variables('configDatabaseName')]"
      //      },
      //      "contentDatabaseName": {
      //        "value": "[variables('contentDatabaseName')]"
      //      },
      //      "GeminiCAfqdn": {
      //        "value": "[variables('GeminiCAfqdn')]"
      //      },
      //      "GeminiSetupUserAccountPassword": {
      //        "value": "[parameters('GeminiSetupUserAccountPassword')]"
      //      },
      //      "GeminiFarmAccountPassword": {
      //        "value": "[parameters('GeminiFarmAccountPassword')]"
      //      },
      //      "GeminiFarmPassphrasePassword": {
      //        "value": "[parameters('GeminiFarmPassphrasePassword')]"
      //      },
      //      "sqlServerServiceAccountPassword": {
      //        "value": "[parameters('sqlServerServiceAccountPassword')]"
      //      },
      //      "spwebVMName": {
      //        "value": "[variables('vmSettings').spwebVMName]"
      //      },
      //      "GeminiFarmName": {
      //        "value": "[parameters('GeminiFarmName')]"
      //      },
      //      "GeminiWebfqdn": {
      //        "value": "[variables('GeminiWebfqdn')]"
      //      },
      //      "spSiteTemplateName": {
      //        "value": "[parameters('spSiteTemplateName')]"
      //      }
      //    }
      //  }
  ],
  "outputs": {
    //"fqdn": {
    //  "value": "[variables('GeminiWebfqdn')]",
    //  "type": "string"
    //},
    //"cafqdn": {
    //  "value": "[variables('GeminiCAfqdn')]",
    //  "type": "string"
    //}
  }
}
