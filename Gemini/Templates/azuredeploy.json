{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {

    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "group": "Infrastructure settings",
        "description": "Change this value to your repo name if deploying from a fork"
      },
      "defaultValue": "https://raw.githubusercontent.com/PascalUmaknow/AutoProvision/master/Gemini/Templates"
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "group": "Infrastructure settings",
        "description": "Auto-generated token to access _artifactsLocation",
        "artifactsLocationSasToken": ""
      },
      "defaultValue": ""
    },
    "storageAccountNamePrefix": {
      "type": "string",
      "metadata": {
        "group": "Infrastructure settings",
        "description": "The prefix of the new storage account created to store the VM disks. Different storage accounts will be created for AD, SQL, and Gemini VMs."
      }
    },
    "storageAccountType": {
      "type": "string",
      "metadata": {
        "group": "Infrastructure settings",
        "description": "The type of storage account"
      },
      "defaultValue": "Standard_LRS"
    },
    "location": {
      "type": "string",
      "metadata": {
        "group": "Infrastructure settings",
        "description": "The region to deploy the resources into. Only change if resources need to be deployed to a different location than the resource group."
      },
      "defaultValue": "[resourceGroup().location]"
    },

    "geminiWebIPNewOrExisting": {
      "type": "string",
      "defaultValue": "new",
      "allowedValues": [
        "new",
        "existing"
      ],
      "metadata": {
        "group": "Gemini Server settings",
        "description": "Indicates whether the Gemini farm's IP is new or existing"
      }
    },
    "geminiWebIPAddressName": {
      "type": "string",
      "metadata": {
        "group": "Gemini Server settings",
        "description": "The new or existing - depending on value of geminiWebIPNewOrExisting parameter - IP address name for SP Web "
      },
      "defaultValue": "geminiIPAdress"
    },
    "dnsPrefix": {
      "type": "string",
      "metadata": {
        "group": "Gemini Server settings",
        "description": "The DNS Prefix for the Public IP Address for the Gemini Web Application"
      }
    },
    "geminiWebIPRGName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "group": "Gemini Server settings",
        "description": "Resource Group containing existing SP Web IP address"
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "geminiVNET",
      "metadata": {
        "group": "Infrastructure settings",
        "description": "Name of virtual network to be created"
      }
    },
    "virtualNetworkAddressRange": {
      "type": "string",
      "metadata": {
        "group": "Infrastructure settings",
        "description": "The address range of the new VNET in CIDR format"
      },
      "defaultValue": "10.156.1.0/24"
    },
    "sqlSubnet": {
      "type": "string",
      "metadata": {
        "group": "SQL Server settings",
        "description": "The address range of the SQL subnet created in the new VNET"
      },
      "defaultValue": "10.156.1.1/27"
    },
    "geminiWebSubnet": {
      "type": "string",
      "metadata": {
        "group": "Gemini Server settings",
        "description": "The address range of the Gemini Web subnet created in the new VNET"
      },
      "defaultValue": "10.156.1.40/27"
    },
    "geminiAppSubnet": {
      "type": "string",
      "metadata": {
        "group": "Gemini Server settings",
        "description": "The address range of the Gemini App subnet created in the new VNET"
      },
      "defaultValue": "10.156.1.80/27"
    },

    "staticSubnet": {
      "type": "string",
      "metadata": {
        "group": "Infrastructure settings",
        "description": "The address range of the subnet static IPs are allocated from in the new VNET"
      },
      "defaultValue": "10.156.1.120/27"
    },
    "sqlLBIPAddress": {
      "type": "string",
      "metadata": {
        "group": "SQL Server settings",
        "description": "The IP address of the new SQL ILB"
      },
      "defaultValue": "10.156.1.121"
    },
    "sqlVMSize": {
      "type": "string",
      "metadata": {
        "group": "SQL Server settings",
        "description": "The size of the SQL VMs created"
      },
      "defaultValue": "Standard_DS1"
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "group": "Infrastructure settings",
        "description": "The name of the administrator account of the new VMs"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "group": "Infrastructure settings",
        "description": "The password for the administrator account of the new VMs"
      }
    },

    "geminiVMSize": {
      "type": "string",
      "metadata": {
        "group": "Gemini Server settings",
        "description": "The size of the SP VMs Created"
      },
      "defaultValue": "Standard_DS1"
    },
    //,
    //"GeminiFarmName": {
    //  "type": "string",
    //  "metadata": {
    //    "group": "basics",
    //    "description": "The name of the Gemini farm"
    //  },
    //  "defaultValue": "spfarm"
    //},


    //"domainName": {
    //  "type": "string",
    //  "metadata": {
    //    "group": "Active Directory settings",
    //    "description": "The FQDN of the AD Domain created "
    //  },
    //  "defaultValue": "sphafarm.local"
    //},

    //"sqlServerServiceAccountUserName": {
    //  "type": "string",
    //  "metadata": {
    //    "group": "SQL Server settings",
    //    "description": "The SQL Server service account name"
    //  },
    //  "defaultValue": "sqlservice"
    //},
    //"sqlServerServiceAccountPassword": {
    //  "type": "securestring",
    //  "metadata": {
    //    "group": "SQL Server settings",
    //    "description": "The SQL Server Service account password"
    //  }
    //},



    //"GeminiSetupUserAccountUserName": {
    //  "type": "string",
    //  "metadata": {
    //    "group": "Gemini Server settings",
    //    "description": "The Gemini Setup account name"
    //  },
    //  "defaultValue": "sp_setup"
    //},
    //"GeminiSetupUserAccountPassword": {
    //  "type": "securestring",
    //  "metadata": {
    //    "group": "Gemini Server settings",
    //    "description": "The Gemini Setup account password"
    //  }
    //},
    //"GeminiFarmAccountUserName": {
    //  "type": "string",
    //  "metadata": {
    //    "group": "Gemini Server settings",
    //    "description": "The Gemini Farm account name"
    //  },
    //  "defaultValue": "sp_farm"
    //},
    //"GeminiFarmAccountPassword": {
    //  "type": "securestring",
    //  "metadata": {
    //    "group": "Gemini Server settings",
    //    "description": "The Gemini Farm account password"
    //  }
    //},
    //"GeminiFarmPassphrasePassword": {
    //  "type": "securestring",
    //  "metadata": {
    //    "group": "Gemini Server settings",
    //    "description": "The Gemini Farm Passphrase"
    //  }
    //},
    //"spSiteTemplateName": {
    //  "type": "string",
    //  "metadata": {
    //    "group": "Gemini Server settings",
    //    "description": "The Gemini Content Site Template Name"
    //  },
    //  "defaultValue": "STS#0"
    //}
  },
  "variables": {
    //"configDatabaseName": "SP_Config",
    //"administrationContentDatabaseName": "SP_AdminContent",
    //"contentDatabaseName": "spfarm_Content",
    "lbSettings": {
      "sqlLBFE": "sqlLBFE",
      "rdpLBFE": "rdpLBFE",
      "rdpLBBE": "rdpLBBE",
      "geminiWebLBFE": "geminiWebLBFE",
      "sqlLBBE": "sqlLBBE",
      "geminiWebLBBE": "geminiWebLBBE",
      "geminiWebLB": "spWeb",
      "sqlLBName": "sqlLoadBalancer",
      "rdpLBName": "rdpLoadBalancer",
      "geminiWebLBName": "geminiWebLoadBalancer"
    },
    "subnetNames": {
      "staticSubnetName": "staticSubnet",
      "sqlSubnetName": "sqlSubnet",
      "geminiWebSubnetName": "geminiWebSubnet",
      "geminiAppSubnetName": "geminiAppSubnet",
      "rdpSubNameName": "jumboxSubnet"
    },
    "SQLAOProbe": "SQLAlwaysOnEndPointProbe",
    "gemininiWebProbe": "gemininiWebProbe",
    "rdpIPAddressName": "rdpIP",
    "RDPNAT": "RDP",
    "vmSettings": {
      "availabilitySets": {
        "sqlAvailabilitySetName": "sqlAvailabilitySet",
        "geminiWebAvailabilitySetName": "geminiWebAvailabilitySet",
        "geminiAppAvailabilitySetName": "geminiAppAvailabilitySet"
      },
      "noOfSqlVMs": 1,
      "noOfspRoleVMs": 2,
      "vmContainerName": "vhds",
      "adPDCVMName": "ad-pdc",
      "adBDCVMName": "ad-bdc",
      "sqlVMName": "sql-",
      "geminiwebVMName": "gemini-web-",
      "geminiappVMName": "gemini-app-",
      "windowsImagePublisher": "MicrosoftWindowsServer",
      "windowsImageOffer": "WindowsServer",
      "windowsImageSKU": "2012-R2-Datacenter",
      "sqlImagePublisher": "MicrosoftSQLServer",
      "sqlImageOffer": "SQL2008R2SP3-WS2008R2SP1",
      "sqlImageSKU": "Enterprise",
      "geminiImagePublisher": "MicrosoftWindowsServer",
      "geminiImageOffer": "WindowsServer",
      "geminiImageSKU": "2012-R2-Datacenter",
      "rdpPort": 3389,
      "spCentralAdminPort": 80,
      "windowsDiskSize": 128,
      "sqlDiskSize": 1000,
      "spDiskSize": 128
    },
    //"prefix": "[tolower(trim(subString(concat(parameters('dnsPrefix'),'           '),0,10)))]",
    "VnetID": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
    "staticSubnetRef": "[concat(variables('VnetID'),'/subnets/',variables('subnetNames').staticSubnetName)]",
    "sqlSubnetRef": "[concat(variables('VnetID'),'/subnets/',variables('subnetNames').sqlSubnetName)]",
    "geminiWebSubnetRef": "[concat(variables('VnetID'),'/subnets/',variables('subnetNames').geminiWebSubnetName)]",
    "geminiRDPSubnetRef": "[concat(variables('VnetID'),'/subnets/',variables('subnetNames').rdpSubNameName)]",
    "geminiAppSubnetRef": "[concat(variables('VnetID'),'/subnets/',variables('subnetNames').geminiAppSubnetName)]",
    "geminiWebResourceIdexisting": "[resourceId(parameters('geminiWebIPRGName'),concat('Microsoft.Network','/','publicIPAddresses'),parameters('geminiWebIPAddressName'))]",
    "geminiWebResourceIdnew": "[resourceId(concat('Microsoft.Network','/','publicIPAddresses'),parameters('geminiWebIPAddressName'))]",
    "GeminiWebfqdn": "[concat(parameters('dnsPrefix'),'.',toLower(trim(replace(parameters('location'),' ' ,''))),'.cloudapp.azure.com')]",
    "ids": {
      "geminiWebLBID": "[resourceId('Microsoft.Network/loadBalancers',variables('lbSettings').geminiWebLBName)]",
      "sqllbID": "[resourceId('Microsoft.Network/loadBalancers',variables('lbSettings').sqlLBName)]",
      "sqlAvailabilitySetName": "[resourceId('Microsoft.Compute/availabilitySets',variables('vmSettings').availabilitySets.sqlAvailabilitySetName)]",
      "geminiWebAvailabilitySetName": "[resourceId('Microsoft.Compute/availabilitySets',variables('vmSettings').availabilitySets.geminiWebAvailabilitySetName)]",
      "rdplbID": "[resourceId('Microsoft.Network/loadBalancers',variables('lbSettings').rdpLBName)]",
      "geminiAppAvailabilitySetName": "[resourceId('Microsoft.Compute/availabilitySets',variables('vmSettings').availabilitySets.geminiAppAvailabilitySetName)]"
    },
    "derivedIds": {
      "geminiWebLBFEConfigID": "[concat(variables('ids').geminiWebLBID,'/frontendIPConfigurations/',variables('lbSettings').geminiWebLBFE)]",
      "geminiWebProbeID": "[concat(variables('ids').geminiWebLBID,'/probes/',variables('gemininiWebProbe'))]",
      "geminiWebBEAddressPoolID": "[concat(variables('ids').geminiWebLBID,'/backendAddressPools/',variables('lbSettings').geminiWebLBBE)]",
      "sqlBEAddressPoolID": "[concat(variables('ids').sqllbID,'/backendAddressPools/',variables('lbSettings').sqlLBBE)]",
      "sqllbFEConfigID": "[concat(variables('ids').sqllbID,'/frontendIPConfigurations/',variables('lbSettings').sqlLBFE)]",
      "sqllbProbeID": "[concat(variables('ids').sqllbID,'/probes/',variables('SQLAOProbe'))]",
      "rdplbFEConfigID": "[concat(variables('ids').rdplbID,'/frontendIPConfigurations/',variables('lbSettings').rdpLBFE)]",
      "rdpBEAddressPoolID": "[concat(variables('ids').rdplbID,'/backendAddressPools/',variables('lbSettings').rdpLBBE)]"
    },
    "subnets": [
      {
        "name": "[variables('subnetNames').staticSubnetName]",
        "properties": {
          "addressPrefix": "[parameters('staticSubnet')]"
        }
      },
      {
        "name": "[variables('subnetNames').sqlSubnetName]",
        "properties": {
          "addressPrefix": "[parameters('sqlSubnet')]"
        }
      },
      {
        "name": "[variables('subnetNames').geminiWebSubnetName]",
        "properties": {
          "addressPrefix": "[parameters('geminiWebSubnet')]"
        }
      },
      {
        "name": "[variables('subnetNames').geminiAppSubnetName]",
        "properties": {
          "addressPrefix": "[parameters('geminiAppSubnet')]"
        }
      }
    ]
  },
  "resources": [
    {
      "name": "CreatingStorageAccounts",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'),'/','nestedtemplates','/','creatingStorageAccounts.json', parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "storageAccountNamePrefix": {
            "value": "[parameters('storageAccountNamePrefix')]"
          },
          "storageAccountType": {
            "value": "[parameters('storageAccountType')]"
          }
        }
      }
    },

    {
      "name": "SettingUpGeminiWebPublicIP",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'),'/','nestedtemplates','/','publicip-',parameters('geminiWebIPNewOrExisting'),'.json', parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "publicIPAddressName": {
            "value": "[parameters('geminiWebIPAddressName')]"
          },
          "publicIPAddressType": {
            "value": "dynamic"
          },
          "dnsPrefix": {
            "value": "[parameters('dnsPrefix')]"
          },
          "publicIpRGName": {
            "value": "[parameters('geminiWebIPRGName')]"
          }
        }
      }
    },
    //{
    //  "name": "CreatingAvailabilitySets",
    //  "type": "Microsoft.Resources/deployments",
    //  "apiVersion": "2015-01-01",
    //  "properties": {
    //    "mode": "Incremental",
    //    "templateLink": {
    //      "uri": "[concat(parameters('_artifactsLocation'),'/','nestedtemplates','/','availabilitySets.json', parameters('_artifactsLocationSasToken'))]",
    //      "contentVersion": "1.0.0.0"
    //    },
    //    "parameters": {
    //      "location": {
    //        "value": "[parameters('location')]"
    //      },
    //      "sqlAvailabilitySetName": {
    //        "value": "[variables('vmSettings').availabilitySets.sqlAvailabilitySetName]"
    //      },
    //      "geminiWebAvailabilitySetName": {
    //        "value": "[variables('vmSettings').availabilitySets.geminiWebAvailabilitySetName]"
    //      },
    //      "geminiAppAvailabilitySetName": {
    //        "value": "[variables('vmSettings').availabilitySets.geminiAppAvailabilitySetName]"
    //      }
    //    }
    //  }
    //},
    {
      "name": "CreatingVirtualNetwork",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'),'/','nestedtemplates','/','vnet-new.json', parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "virtualNetworkName": {
            "value": "[parameters('virtualNetworkName')]"
          },
          "virtualNetworkAddressRange": {
            "value": "[parameters('virtualNetworkAddressRange')]"
          },
          "subnets": {
            "value": "[variables('subnets')]"
          }
        }
      }
    },
    {
      "name": "SettingUpRdp",
      "type": "Microsoft.Resources/deployments",
      "dependsOn": [
        "Microsoft.Resources/deployments/SettingUpGeminiWebPublicIP",
        "Microsoft.Resources/deployments/CreatingVirtualNetwork"
      ],
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'),'/','nestedtemplates','/','publicip-rdp.json', parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "rdpIPAddressName": {
            "value": "[variables('rdpIPAddressName')]"
          },
          "rdpLBName": {
            "value": "[variables('lbSettings').rdpLBName]"
          },
          "rdpLBFE": {
            "value": "[variables('lbSettings').rdpLBFE]"
          },
          "RDPNAT": {
            "value": "[variables('RDPNAT')]"
          },
          "rdplbFEConfigID": {
            "value": "[variables('derivedIds').rdplbFEConfigID]"
          },
          "rdpLBBE": {
            "value": "[variables('lbSettings').rdpLBBE]"
          }
        }
      }
    },
    {
      "name": "SettingUpLoadBalancers",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/SettingUpGeminiWebPublicIP",
        "Microsoft.Resources/deployments/CreatingVirtualNetwork"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'),'/','nestedtemplates','/','setupLBs.json', parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "geminiWebLBName": {
            "value": "[variables('lbSettings').geminiWebLBName]"
          },
          "geminiWebLBFE": {
            "value": "[variables('lbSettings').geminiWebLBFE]"
          },
          "geminiWebResourceId": {
            "value": "[variables(concat('geminiWebResourceId',parameters('geminiWebIPNewOrExisting')))]"
          },
          "geminiWebLBBE": {
            "value": "[variables('lbSettings').geminiWebLBBE]"
          },
          "geminiWebLB": {
            "value": "[variables('lbSettings').geminiWebLB]"
          },
          "geminiWebLBFEConfigID": {
            "value": "[variables('derivedIds').geminiWebLBFEConfigID]"
          },
          "geminiWebBEAddressPoolID": {
            "value": "[variables('derivedIds').geminiWebBEAddressPoolID]"
          },
          "geminiWebProbeID": {
            "value": "[variables('derivedIds').geminiWebProbeID]"
          },
          "gemininiWebProbe": {
            "value": "[variables('gemininiWebProbe')]"
          },
          "sqlLBName": {
            "value": "[variables('lbSettings').sqlLBName]"
          },
          "sqlLBFE": {
            "value": "[variables('lbSettings').sqlLBFE]"
          },
          "sqlLBIPAddress": {
            "value": "[parameters('sqlLBIPAddress')]"
          },
          "staticSubnetRef": {
            "value": "[variables('staticSubnetRef')]"
          },
          "sqlLBBE": {
            "value": "[variables('lbSettings').sqlLBBE]"
          },
          "sqllbFEConfigID": {
            "value": "[variables('derivedIds').sqllbFEConfigID]"
          },
          "sqllbProbeID": {
            "value": "[variables('derivedIds').sqllbProbeID]"
          },
          "SQLAOProbe": {
            "value": "[variables('SQLAOProbe')]"
          }
        }
      }
    },
    {
      "name": "CreatingNetworkInterfaces",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/CreatingVirtualNetwork",
        "Microsoft.Resources/deployments/SettingUpLoadBalancers"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'),'/','nestedtemplates','/','creatingNICS.json', parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "staticSubnetRef": {
            "value": "[variables('staticSubnetRef')]"
          },
          "sqlVMName": {
            "value": "[variables('vmSettings').sqlVMName]"
          },
          "sqlSubnetRef": {
            "value": "[variables('sqlSubnetRef')]"
          },
          "sqlBEAddressPoolID": {
            "value": "[variables('derivedIds').sqlBEAddressPoolID]"
          },
          "geminiwebVMName": {
            "value": "[variables('vmSettings').geminiwebVMName]"
          },
          "geminiWebSubnetRef": {
            "value": "[variables('geminiWebSubnetRef')]"
          },
          "geminiRDPSubnetRef": {
            "value": "[variables('geminiWebSubnetRef')]" //Temp
          },
          "geminiWebBEAddressPoolID": {
            "value": "[variables('derivedIds').geminiWebBEAddressPoolID]"
          },

          "rdpBEAddressPoolID": {
            "value": "[variables('derivedIds').rdpBEAddressPoolID]"
          },
          "geminiappVMName": {
            "value": "[variables('vmSettings').geminiappVMName]"
          },
          "geminiAppSubnetRef": {
            "value": "[variables('geminiAppSubnetRef')]"
          }
        }
      }
    }
    ,
    {
      "name": "ProvisioningSQLVirtualMachines",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/CreatingStorageAccounts",
        "Microsoft.Resources/deployments/CreatingNetworkInterfaces",
        "Microsoft.Resources/deployments/CreatingAvailabilitySets"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'),'/','nestedtemplates','/','provisioningSQLVMs.json', parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "sqlVMName": {
            "value": "[variables('vmSettings').sqlVMName]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "storageAccountNamePrefix": {
            "value": "[parameters('storageAccountNamePrefix')]"
          },
          "availabilitySet": {
            "value": "[variables('ids').sqlAvailabilitySetName]"
          },
          "sqlVMSize": {
            "value": "[parameters('sqlVMSize')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "windowsImagePublisher": {
            "value": "[variables('vmSettings').windowsImagePublisher]"
          },
          "windowsImageOffer": {
            "value": "[variables('vmSettings').windowsImageOffer]"
          },
          "windowsImageSKU": {
            "value": "[variables('vmSettings').windowsImageSKU]"
          },
          "vmContainerName": {
            "value": "[variables('vmSettings').vmContainerName]"
          },
          "sqlImagePublisher": {
            "value": "[variables('vmSettings').sqlImagePublisher]"
          },
          "sqlImageOffer": {
            "value": "[variables('vmSettings').sqlImageOffer]"
          },
          "sqlImageSKU": {
            "value": "[variables('vmSettings').sqlImageSKU]"
          }
        }
      }
    },
    //,
    //{
    //  "name": "CreatingGeminiJumpBox",
    //  "type": "Microsoft.Resources/deployments",
    //  "apiVersion": "2015-01-01",
    //  "dependsOn": [
    //    "Microsoft.Resources/deployments/CreatingStorageAccounts",
    //    "Microsoft.Resources/deployments/CreatingNetworkInterfaces",
    //    "Microsoft.Resources/deployments/SettingUpRdp"
    //  ],
    //  "properties": {
    //    "mode": "Incremental",
    //    "templateLink": {
    //      "uri": "[concat(parameters('_artifactsLocation'),'/','nestedtemplates','/','provisioningJumpBox.json', parameters('_artifactsLocationSasToken'))]",
    //      "contentVersion": "1.0.0.0"
    //    },
    //    "parameters": {

    //      "geminiRDPSubnetRef": {
    //        "value": "[variables('geminiWebSubnetRef')]"//Temp
    //     //   "value": "[variables('geminiRDPSubnetRef')]"
    //      },
    //      "location": {
    //        "value": "[parameters('location')]"
    //      },
    //      "geminiVMSize": {
    //        "value": "[parameters('geminiVMSize')]"
    //      },
    //      "adminUsername": {
    //        "value": "[parameters('adminUsername')]"
    //      },
    //      "adminPassword": {
    //        "value": "[parameters('adminPassword')]"
    //      },
    //      "geminiImagePublisher": {
    //        "value": "[variables('vmSettings').geminiImagePublisher]"
    //      },
    //      "geminiImageOffer": {
    //        "value": "[variables('vmSettings').geminiImageOffer]"
    //      },
    //      "geminiImageSKU": {
    //        "value": "[variables('vmSettings').geminiImageSKU]"
    //      },
    //      "vmContainerName": {
    //        "value": "[variables('vmSettings').vmContainerName]"
    //      },
    //      "storageAccountNamePrefix": {
    //        "value": "[parameters('storageAccountNamePrefix')]"
    //      }
    //    }
    //  }
    //}
    ,
    {
      "name": "CreatingGeminiVirtualMachines",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/CreatingStorageAccounts",
        "Microsoft.Resources/deployments/CreatingNetworkInterfaces",
        "Microsoft.Resources/deployments/CreatingAvailabilitySets"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'),'/','nestedtemplates','/','provisioningGeminiVMs.json', parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "geminiappVMName": {
            "value": "[variables('vmSettings').geminiappVMName]"
          },
          "geminiwebVMName": {
            "value": "[variables('vmSettings').geminiwebVMName]"
          },
          "geminiRDPSubnetRef": {
            "value": "[variables('geminiWebSubnetRef')]"
          },
          "rdpLBName": {
            "value": "[variables('lbSettings').rdpLBName]"
          },
          "rdpBEAddressPoolID": {
            "value": "[variables('derivedIds').rdpBEAddressPoolID]"
          },
          "RDPNAT": {
            "value": "[variables('RDPNAT')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "geminiVMSize": {
            "value": "[parameters('geminiVMSize')]"
          },
          "geminiWebAvailabilitySet": {
            "value": "[variables('ids').geminiWebAvailabilitySetName]"
          },
          "geminiAppAvailabilitySet": {
            "value": "[variables('ids').geminiAppAvailabilitySetName]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "geminiImagePublisher": {
            "value": "[variables('vmSettings').geminiImagePublisher]"
          },
          "geminiImageOffer": {
            "value": "[variables('vmSettings').geminiImageOffer]"
          },
          "geminiImageSKU": {
            "value": "[variables('vmSettings').geminiImageSKU]"
          },
          "vmContainerName": {
            "value": "[variables('vmSettings').vmContainerName]"
          },
          "storageAccountNamePrefix": {
            "value": "[parameters('storageAccountNamePrefix')]"
          }
        }
      }
    }
    //,
    //{
    //  "name": "ConfiguringGemini",
    //  "type": "Microsoft.Resources/deployments",
    //  "apiVersion": "2015-01-01",
    //  "dependsOn": [
    //    "Microsoft.Resources/deployments/CreatingGeminiVirtualMachines"
    //  ],
    //  "properties": {
    //    "mode": "Incremental",
    //    "templateLink": {
    //      "uri": "[concat(parameters('_artifactsLocation'),'/','nestedtemplates','/','configuringGemini.json', parameters('_artifactsLocationSasToken'))]",
    //      "contentVersion": "1.0.0.0"
    //    },
    //    "parameters": {
    //      "vmName": {
    //        "value": "[concat(variables('vmSettings').geminiwebVMName, '0')]"
    //      },
    //      "modulesUrl": {
    //        "value": "[concat(parameters('_artifactsLocation'),'/','DSC','/','GeminiWebDSC.zip', parameters('_artifactsLocationSasToken'))]"
    //      },
    //      "configurationFunction": {
    //        "value": "GeminiWebDSC.ps1\\GeminiWebsite"
    //      }
    //    }
    //  }
    //}
  ],



  "outputs": {
    "fqdn": {
      "value": "[variables('GeminiWebfqdn')]",
      "type": "string"
    }
  }
}
